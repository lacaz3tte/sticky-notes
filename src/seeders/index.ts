import * as dotenv from 'dotenv';
import { sequelize, setupAssociations, User, Tag, StickyNote, StickyNoteLog } from '../models';
import { seedUsers } from './user.seeder';
import { seedTags } from './tag.seeder';
import { seedStickyNotes } from './sticky-note.seeder';
import { seedStickyNoteLogs } from './sticky-note-log.seeder';

dotenv.config();

export interface SeederOptions {
  usersCount: number;
  tagsPerUser: number;
  notesPerUser: number;
  tagsPerNote: number;
  logsPerNote: number;
}

export const defaultSeederOptions: SeederOptions = {
  usersCount: 3,
  tagsPerUser: 5,
  notesPerUser: 15,
  tagsPerNote: 2,
  logsPerNote: 3
};

export async function runSeeders(options?: Partial<SeederOptions>) {
  const mergedOptions = { ...defaultSeederOptions, ...options };

  try {
    console.log('üöÄ Starting database seeding...');

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏
    setupAssociations();

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await sequelize.sync({ force: true });
    console.log('‚úÖ Database synced');

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–¥–µ—Ä—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    const users = await seedUsers(mergedOptions);
    console.log(`‚úÖ Created ${users.length} users`);

    const tags = await seedTags(mergedOptions, users);
    console.log(`‚úÖ Created ${tags.length} tags`);

    const notes = await seedStickyNotes(mergedOptions, users, tags);
    console.log(`‚úÖ Created ${notes.length} sticky notes`);

    const logsCount = await seedStickyNoteLogs(mergedOptions, notes);
    console.log(`‚úÖ Created ${logsCount} log entries`);

    console.log('üéâ Database seeded successfully!');
    console.log(`üìä Summary:`);
    console.log(`   - Users: ${users.length}`);
    console.log(`   - Tags: ${tags.length}`);
    console.log(`   - Sticky Notes: ${notes.length}`);
    console.log(`   - Log entries: ${logsCount}`);

  } catch (error) {
    console.error('‚ùå Error seeding database:', error);
    throw error;
  } finally {
    await sequelize.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∏–¥–µ—Ä–æ–≤, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runSeeders().catch(console.error);
}